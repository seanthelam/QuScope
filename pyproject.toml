[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quscope"
version = "0.1.0"
description = "QuScope - Quantum algorithms for microscopy image processing and EELS analysis"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Reis, Roberto and Lam, Sean", email = "robertomsreis@gmail.com, seanlam702@gmail.com"},
]
keywords = ["quantum", "computing", "microscopy", "EELS", "image-processing", "qiskit", "quantum-ml", "electron-diffraction"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "qiskit>=0.45.0",
    "qiskit-aer>=0.13.0",
    "numpy>=1.21.0",
    "pillow>=8.0.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/QuScope/QuScope"
Documentation = "https://quscope.readthedocs.io"
Repository = "https://github.com/QuScope/QuScope.git"
"Bug Tracker" = "https://github.com/QuScope/QuScope/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "nbsphinx>=0.9.0",
]
viz = [
    "matplotlib>=3.5.0",
    "jupyter>=1.0.0",
]
all = [
    "matplotlib>=3.5.0",
    "jupyter>=1.0.0",
    "pandas>=1.3.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src --cov-report=term-missing --cov-report=html --cov-report=xml"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
